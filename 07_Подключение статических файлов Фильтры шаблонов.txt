урок
https://www.youtube.com/watch?v=IrUG07namQ8&list=PLA0M1Bcd0w8xO_39zZll2u1lz_Q-Mwn1F&index=38

В режиме отладки Django ищет статические файлы во всех static папках проекта

---А в боевом режиме реальный web_server только из общей папки по пути проекта ...\dgsite\coolsite\static

при вызове каманды 'python manage.py collectstatic' создается эта папка и копируются туда все статические файлы проекта
чтоб это все сработало в пакете конфигурации необходимо определить ТРИ Константы
 - STATIC_URL - перфикс URL - для статических файлов
 - STATIC_ROOT - путь к общей статической папке, используемой реальным веб-сервером
 - STATICFILES_DIRRS - список дополнительных (нестандартных) путей к статическим файлам, используемых для сбора и для режима отладки

Создадим папки и подкаталоги static
         - D:\Python_Course\Django_Salfedu\dgsite\coolsite\women\static
         +
         -  D:\Python_Course\Django_Salfedu\dgsite\coolsite\women\static\women
                                                                       +\women\css\styles.css   (файлы для оформления наших шаблонов)
                                                                       +\women\images\..файлы изображений
                                                                       +\women\js

    Теперь подключим все на страницу
в файле base.html пропишем строку {% load static %} она подключит статические файлы к нашему шаблону
    подключим файл оформления для этого в теге <head> пропишем <link type="text/css" href="{% static 'women/css/styles.css' %}" rel="stylesheet" />

Скачал с gitHub  файлы к урокам и перезаписал  db.sqlite3, about.html, base.html, index.html

    Теперь контент(тект) на странице хотим чтоб был разбит на абзацы а не сплошным текстом,
в Django для работы с шаблонами существуют специальные фильтры которые делают разные манипуляции
Фильтры шаблонов: https://djbook.ru/rel3.0/ref/templates/builtins.html#ref-templates-builtins-filters
    Текст у нас в БД написан абзацами разделенными через пустую строку(это можно посмотреть в db.sqlite3 через программу)
поэтому используем фильтр "linebreaks", в файле index.html подправим  {{p.content|linebreaks}} , теперь подравняем текст сократив вывод текста фильтр выводит указанное кол-во слов {{p.content|linebreaks|truncatewords:50}}
    Если в базе прописать текст с тегом к примеру <h1>Анджелина Джоли</h1> , то он будет автоматом экранирован, но иногда необходимо теги так использовать и для этого прописываем {% autoescape off %} -контент- {% endautoescape %}, а чтоб все вернуть по дефолту нужно прописать {% autoescape on %}























